import Config

# Configure your database
# config :packetflow_chat_demo, PacketflowChatDemo.Repo,
#   username: "postgres",
#   password: "postgres",
#   hostname: "localhost",
#   database: "packetflow_chat_demo_dev",
#   stacktrace: true,
#   show_sensitive_data_on_connection_error: true,
#   pool_size: 10

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we can use
# esbuild to bundle .js and .css sources.
config :packetflow_chat_demo, PacketflowChatDemoWeb.Endpoint,
  # Binding to loopback ipv4 address prevents access from other machines.
  # Change to `ip: {0, 0, 0, 0}` to allow access from other machines.
  http: [ip: {127, 0, 0, 1}, port: String.to_integer(System.get_env("PORT") || "4000")],
  check_origin: false,
  code_reloader: true,
  debug_errors: true,
  secret_key_base: "BlDiNspbkvYdk4tfkb7u5LJxpUFt3lAD/gxQnoeWc9c0UWhG3Y30+e6XhSIv2RiM",
  watchers: [
    esbuild: {Esbuild, :install_and_run, [:default, ~w(--sourcemap=inline --watch)]},
    tailwind: {Tailwind, :install_and_run, [:default, ~w(--watch)]}
  ]

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4000,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Watch static and templates for browser reloading.
config :packetflow_chat_demo, PacketflowChatDemoWeb.Endpoint,
  live_reload: [
    patterns: [
      "priv/static/head/*.html",
      "priv/static/head/*.heex",
      "priv/static/head/*.eex",
      "priv/static/assets/*.js",
      "priv/static/assets/*.css",
      "lib/packetflow_chat_demo_web/**/*.ex",
      "lib/packetflow_chat_demo_web/**/*.heex"
    ]
  ]

# Enable dev routes for dashboard and mailbox
config :packetflow_chat_demo, dev_routes: true

# Configure your database
# config :packetflow_chat_demo, PacketflowChatDemo.Repo,
#   stacktrace: true,
#   show_sensitive_data_on_connection_error: true,
#   pool_size: 10

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"

# OpenAI configuration for development
# You can set your API key here or use the OPENAI_API_KEY environment variable
config :packetflow_chat_demo,
  openai_api_key: System.get_env("OPENAI_API_KEY")

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime
